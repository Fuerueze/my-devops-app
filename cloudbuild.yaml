steps:
  - name: 'golang:1.22'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        go test ./...
        GOOS=linux GOARCH=amd64 go build -o main -mod=tidy .
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/cr-vs-gke/my-devops-app:${SHORT_SHA}', '-f', 'Dockerfile', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/cr-vs-gke/my-devops-app:${SHORT_SHA}']
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', 'my-cloud-run-service', '--image', 'gcr.io/cr-vs-gke/my-devops-app:${SHORT_SHA}', '--region', 'us-central1', '--platform', 'managed']
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['kubectl', 'set', 'image', 'deployment/my-gke-deployment', 'my-container=gcr.io/cr-vs-gke/my-devops-app:${SHORT_SHA}', '--namespace=default']
images:
  - 'gcr.io/cr-vs-gke/my-devops-app:${SHORT_SHA}'

logs_bucket: 'gs://my-logs-bucket98'
